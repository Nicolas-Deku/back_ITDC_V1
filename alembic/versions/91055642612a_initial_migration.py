"""Initial migration

Revision ID: 91055642612a
Revises: 
Create Date: 2025-08-06 15:59:16.548909

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '91055642612a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('entreprise',
    sa.Column('idEntreprise', sa.UUID(), nullable=False),
    sa.Column('nom', sa.String(), nullable=False),
    sa.Column('adresse', sa.String(), nullable=True),
    sa.Column('contact_email', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('idEntreprise'),
    sa.UniqueConstraint('nom')
    )
    op.create_table('pending_registration',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_email', sa.String(), nullable=False),
    sa.Column('personal_info_json', sa.String(), nullable=True),
    sa.Column('company_info_json', sa.String(), nullable=True),
    sa.Column('role_assigned', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pending_registration_user_email'), 'pending_registration', ['user_email'], unique=True)
    op.create_table('verification_code',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('identifier', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_verification_code_identifier'), 'verification_code', ['identifier'], unique=True)
    op.create_table('groupe',
    sa.Column('idGroupe', sa.UUID(), nullable=False),
    sa.Column('nom', sa.String(), nullable=False),
    sa.Column('idEntreprise', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['idEntreprise'], ['entreprise.idEntreprise'], ),
    sa.PrimaryKeyConstraint('idGroupe')
    )
    op.create_table('poste',
    sa.Column('idPoste', sa.UUID(), nullable=False),
    sa.Column('nom', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('idEntreprise', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['idEntreprise'], ['entreprise.idEntreprise'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idPoste')
    )
    op.create_table('configuration_horaire',
    sa.Column('idConfigurationHoraire', sa.UUID(), nullable=False),
    sa.Column('idGroupe', sa.UUID(), nullable=False),
    sa.Column('type_horaire', sa.Enum('MATIN', 'APRES_MIDI', 'SOIR', 'SUPPLEMENTAIRE', name='shifttype'), nullable=False),
    sa.Column('heure_debut_entree', sa.Time(), nullable=False),
    sa.Column('heure_fin_entree', sa.Time(), nullable=False),
    sa.Column('heure_debut_sortie', sa.Time(), nullable=False),
    sa.Column('heure_fin_sortie', sa.Time(), nullable=False),
    sa.Column('seuil_retard', sa.Integer(), nullable=False),
    sa.Column('jours_conges_annuels', sa.Integer(), nullable=False),
    sa.Column('heures_supplementaires_autorisees', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['idGroupe'], ['groupe.idGroupe'], ),
    sa.PrimaryKeyConstraint('idConfigurationHoraire')
    )
    op.create_table('employe',
    sa.Column('idEmploye', sa.UUID(), nullable=False),
    sa.Column('nom', sa.String(), nullable=False),
    sa.Column('prenom', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('motDePasse', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('employeeId', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('idEntreprise', sa.UUID(), nullable=False),
    sa.Column('idGroupe', sa.UUID(), nullable=True),
    sa.Column('idPoste', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['idEntreprise'], ['entreprise.idEntreprise'], ),
    sa.ForeignKeyConstraint(['idGroupe'], ['groupe.idGroupe'], ),
    sa.ForeignKeyConstraint(['idPoste'], ['poste.idPoste'], ),
    sa.PrimaryKeyConstraint('idEmploye'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_index(op.f('ix_employe_email'), 'employe', ['email'], unique=True)
    op.create_index(op.f('ix_employe_employeeId'), 'employe', ['employeeId'], unique=True)
    op.create_table('conge',
    sa.Column('idConge', sa.UUID(), nullable=False),
    sa.Column('idEmploye', sa.UUID(), nullable=False),
    sa.Column('type_conge', sa.String(), nullable=False),
    sa.Column('date_debut', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_fin', sa.DateTime(timezone=True), nullable=False),
    sa.Column('statut', sa.String(), nullable=False),
    sa.Column('commentaire', sa.String(), nullable=True),
    sa.Column('approuve_par', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['approuve_par'], ['employe.idEmploye'], ),
    sa.ForeignKeyConstraint(['idEmploye'], ['employe.idEmploye'], ),
    sa.PrimaryKeyConstraint('idConge')
    )
    op.create_table('empreinte',
    sa.Column('idEmpreinte', sa.UUID(), nullable=False),
    sa.Column('idEmploye', sa.UUID(), nullable=False),
    sa.Column('donneesBiometriques', sa.LargeBinary(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['idEmploye'], ['employe.idEmploye'], ),
    sa.PrimaryKeyConstraint('idEmpreinte')
    )
    op.create_table('presence',
    sa.Column('idPresence', sa.UUID(), nullable=False),
    sa.Column('idEmploye', sa.UUID(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('methode', sa.String(), nullable=False),
    sa.Column('appareil_id', sa.String(), nullable=True),
    sa.Column('statut', sa.String(), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('idConfigurationHoraire', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['idConfigurationHoraire'], ['configuration_horaire.idConfigurationHoraire'], ),
    sa.ForeignKeyConstraint(['idEmploye'], ['employe.idEmploye'], ),
    sa.PrimaryKeyConstraint('idPresence')
    )
    op.create_table('session',
    sa.Column('idSession', sa.UUID(), nullable=False),
    sa.Column('idEmploye', sa.UUID(), nullable=False),
    sa.Column('access_token', sa.String(), nullable=False),
    sa.Column('token_type', sa.String(), nullable=False),
    sa.Column('date_creation', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('date_expiration', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['idEmploye'], ['employe.idEmploye'], ),
    sa.PrimaryKeyConstraint('idSession'),
    sa.UniqueConstraint('access_token')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('session')
    op.drop_table('presence')
    op.drop_table('empreinte')
    op.drop_table('conge')
    op.drop_index(op.f('ix_employe_employeeId'), table_name='employe')
    op.drop_index(op.f('ix_employe_email'), table_name='employe')
    op.drop_table('employe')
    op.drop_table('configuration_horaire')
    op.drop_table('poste')
    op.drop_table('groupe')
    op.drop_index(op.f('ix_verification_code_identifier'), table_name='verification_code')
    op.drop_table('verification_code')
    op.drop_index(op.f('ix_pending_registration_user_email'), table_name='pending_registration')
    op.drop_table('pending_registration')
    op.drop_table('entreprise')
    # ### end Alembic commands ###
